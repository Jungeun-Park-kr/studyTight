<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="stylesheet" type="text/css"/> 
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script> 
    <script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
    <script type="text/javascript">   

    //console.log(new Date());
    // $(document).ready( function() {
    //     // $("#header").load('/views/header.html');
    //     $("#header").render('/views/header.html');

    //     // $("#leftside").load("common/leftside.html");  
    // });
    // </script>
    <link rel="stylesheet" href="/public/mainframe_shortcuts.css">
    <link rel="stylesheet" href="/public/mainframe.css">
    <link rel="stylesheet" href="/public/font.css">

    <link rel="stylesheet" type="text/css" href="/public/header.css"/>
    <link rel="stylesheet" type="text/css" href="/public/component.css"/>
</head>

<body>
    <div id="wrap">
        <div id="header" role="banner">
            <div class="main_header">
                <!-- 여기는 상단 헤더 (로고, 메뉴버튼들) -->
                <div class="logo_area">
                    <a href="#" class="logo_tight"><img src="/logo/logo_lower.png" class=img_logo onclick="location.href='/'" alt=""/></a>
                    <section class="group_menu">
                        <nav class="menu_effect" id="menu_nav">
                            <a href="/" class="menu" id="menu_home">내 공부방</a>
                            <a href="/guestbook" class="menu" id="menu_guestbook">방명록</a>
                            <a href="/timetable/main" class="menu" id="menu_timetable">시간표</a>
                        </nav>
                    </section>
                </div>
                <script type="text/javascript">   
                    $(document).ready( function() {
                        const location = window.location.pathname;
                       // console.log('현재 url:'+location);
                        if (location == '/') {
                            // $('#menu_home').css({'outline': 'none', 'color':'#6ED4D8', 'text-decoration-color': '#6ED4D8', 'font-weight': '700' });
                            $('#menu_home').addClass('menu_active');
                            $('#menu_guestbook').removeClass('menu_active');
                            $('#menu_timetable').removeClass('menu_active');
                        } else if (location == '/guestbook') {
                            $('#menu_guestbook').addClass('menu_active');
                            $('#menu_home').removeClass('menu_active');;
                            $('#menu_timetable').removeClass('menu_active');
                        } else if (location == '/timetable/main' || location == '/timetable/edit') {
                            $('#menu_timetable').addClass('menu_active');
                            $('#menu_home').removeClass('menu_active');
                            $('#menu_guestbook').removeClass('menu_active');
                        } else {
                            $('#menu_home').removeClass('menu_active');
                            $('#menu_guestbook').removeClass('menu_active');
                            $('#menu_timetable').removeClass('menu_active');
                        }
                        
                    });
                    
                </script>
                <div class="login">
                        <div class="profile_section">
                            <% if (user) { %> <%# 로그인 되어 있는 경우 (server에서 접속중인 user 정보 받아옴) %> 
                            <div class="alarm_bell">
                                <img id="alarm_bell_img" src="/public/media/bell_pure.png">
                            </div>
                            <div class="profile">
                                <!-- 이미지 클릭시 프로필 관리 화면으로 가는것도 좋을듯 -->
                                <img id="activeUserimg" src=<%= user.profile_image %>  onclick="location.href='#프로필수정화면'">
                                <div class="username" id="activeUsername"><%= user.name +'님'%></div> 
                            </div>
                            <div class="logout">
                                <input type="submit" class="btn_logout" title="로그아웃" value="로그아웃" onClick="location.href='/auth/logout'"/>    
                            </div>
                            <% } %>
                            <!-- 로그인 되어있지 않은 경우는 로그인 화면으로 넘어가야 하기 때문에 아래 코드는 필요없음 -->
                            <!-- <%# } else{ %> 
                            <div class="logout">
                                <input type="button" class="btn_logout" title="로그인" value="로그인" onclick="location.href='/login'" />
                            </div>
                            <%# } %> -->
                        </div>
                    </div>
                </div>
            </div>
        </div>


    
        <div id="container" role="main">
            <div id="shortcuts_wrap">
                <div class="shortcuts_title" id="shortcuts_title">현재 시간표에 등록된 일정이 없습니다</div>
                <div class="shortcuts_link" id="shortcuts_link" onclick="openLink();">바로가기</div>
            </div>
            <script type="text/javascript">

                function openLink() { //바로가기 버튼 누른경우
                    if (isopen && isonline) { //실시간 수업 있는경우 링크로 이동
                        var win = window.open(link, '_blank');
                        win.focus();
                    } else if (isopen && !isonline) {
                        alert('온라인 강의가 아닙니다.');
                    } else {
                        if (isonline) {
                            alert('현재 등록된 강의 링크가 없습니다.');
                        } else {
                            alert('현재 시간표에 등록된 일정이 없습니다');
                        }
                    }
                }

                function getRealtimeCourse(course) {
                    var type, tmptime, day, st, sh, sm, et, eh, em;
                    var date = new Date();
                    //현재 시간
                    var curday = date.getDay();
                    var curhour = date.getHours();
                    var curmin = date.getMinutes();

                    // 오프라인 - 테스트용
                    // var curday = 4;
                    // var curhour = 12;
                    // var curmin = 13;

                    //온라인 - 테스트용 
                    // var curday = 1; //월요일
                    // var curhour = 11;  // 오전 11시
                    // var curmin = 46; //46분

                    var cur = (curhour * 3600) + (curmin * 60); //현재시간 초단위로 변환
                    for (var i = 0; i < course.schedules.length; i++) {
                        tmptime = course.schedules[i];
                        day = dayStrToNum(tmptime.day); //요일을 번호로 바꿔서 저장
                        st = tmptime.start_time.split(':'); //시,분으로 나누기
                        sh = Number(st[0]); //시작 시
                        sm = Number(st[1]); //시작 분
                        et = tmptime.end_time.split(':');
                        eh = Number(et[0]); //종료 시
                        em = Number(et[1]); //종료 분
                        if (day == curday) { //요일 비교
                            var starttime = (sh * 3600) + (sm * 60); //시작시간 초단위로 변환
                            var endtime = (eh * 3600) + (em * 60);
                            var gap = starttime - cur; //수업 시작까지 남은시간 계산
                            if (gap >= 0 && gap <= 1800) { //30분 이내에 수업이 있는 경우
                                type = getCourseType(course.schedules[i].course_type);
                                return {
                                    message : tmptime.start_time + ' ~ ' + tmptime.end_time + ' '+ course.course_name,
                                    type : course.schedules[i].course_type,
                                    classroom : course.schedules[i].classroom
                                }; //시간 과목이름 과목종류 리턴
                            } else if (starttime <= cur && cur <= endtime) { //수업이 종료될 때 까지 계속 띄워두기
                                type = getCourseType(course.schedules[i].course_type);
                                return {
                                    message : tmptime.start_time + ' ~ ' + tmptime.end_time + ' '+ course.course_name,
                                    type : course.schedules[i].course_type,
                                    classroom : course.schedules[i].classroom
                                }; //시간 과목이름 과목종류 리턴
                            }
                        }
                    }
                    return null;
                }

                function getCourseType(type) { //과목 타입(online_realtime,online_video,offline)
                    switch (type) {
                        case 'online_realtime':
                            return "온라인 실시간";
                        case 'online_video':
                            return "온라인 동영상";
                        case 'offline': //오프라인이면 강의실 리턴
                            return '오프라인';
                    }
                }

                function dayStrToNum(day) {
                    switch (day) {
                        case 'mon':
                            return 1;
                        case 'tue':
                            return 2;
                        case 'wed':
                            return 3;
                        case 'thu':
                            return 4;
                        case 'fri':
                            return 5;
                        case 'sat':
                            return 6;
                        case 'sun':
                            return 0;
                    }
                }

                //$(document).ready( function() {
                    var isopen = false;
                    var isonline = false;
                    var course;
                    var timetable = JSON.parse('<%- JSON.stringify(timetable) %>');
                    
                        for (var i = 0; i < timetable.length; i++) {
                        course = getRealtimeCourse(timetable[i]); //courselist에서 실시간 강의 찾기
                        if (course != null) { //30분이내 실시간 강의 있는 경우
                            isopen = true;
                            // console.log(course);
                            if (course.type === 'offline') { // 오프라인일 경우 메시지에 장소 추가
                                course.message = course.message + ' ('+course.classroom+')';
                            } else { //온라인일 경우 링크 넣기
                                isonline = true;
                                link = course.classroom; // [바로가기]클릭시 이동될 링크
                            }
                            break;
                        }
                    }
                    
                    if (isopen) { // 실시간 일정 있는 경우
                            $('#shortcuts_title').html(course.message);
                        if (isonline) {
                            //document.getElementById("shortcuts_link").style.color = "blue";
                            $('#shortcuts_link').css({color:"blue"});
                        }
                    }
                //});
            </script>
            <div id="MAIN_LEFT" class="column_left">
                <div class="section">
                    <!-- 여기는 본문 들어갈 메인 섹션 -->
                    <div class="D-day" id="D-day">
                        <div class="wrap_day" id="wrap_day">
                        <script>
                            function deleteDay(content,index){
                                console.log('삭제될 애:',content,index);
                            
                                var parent_day=document.getElementById('wrap_day')
                                var delete_day=document.getElementsByClassName('d-day')[index];

                                //DB에서 삭제되도록
                                fetch('/day',{
                                        method:'DELETE',
                                        headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({user_id:'<%= user.name %>',dday_content:content})
                                        //.then(res => res.json())   
                                    });
                                parent_day.removeChild(delete_day);
                                alert(content+'이(가) d-day에서 삭제되었습니다.');
                            
                                // 디데이 개수 체크
                                var parent_day=document.getElementById('wrap_day');
                                var childCnt = parent_day.childElementCount;
                                console.log('자식 개수:'+childCnt);
                                var invisible_plus=document.getElementById('d-day-plus');
                                if (childCnt > 9) { // <script>2개, d-day 8개 => 총 10개
                                    console.log('가리기 after delete');
                                    invisible_plus.style.display='none';
                                } 
                                // else if (childCnt == 9 && invisible_plus.style.display=='none') {
                                //     invisible_plus.style.display= 'none';
                                // } 
                                else {
                                    console.log('보이기 after delete');
                                    invisible_plus.style.display='inline-block';
                                }
                                // var d_daylist = JSON.parse('<%- JSON.stringify(d_day) %>');
                                // var invisible_plus=document.getElementById('d-day-plus');
                                // if(d_daylist.length>=8){
                                    
                                //     invisible_plus.style.display='none';
                                // }else{
                                //     invisible_plus.style.display='inline-block';
                                // } 
                            }
                        </script>
                        <script>
                            var parentDiv = document.getElementById("wrap_day")
                            var d_daylist = JSON.parse('<%- JSON.stringify(d_day) %>');
                            //console.log(d_daylist.length);
                            
                            for (var i = 0; i < d_daylist.length; i++) {
                                
                                
                                var show_day = document.createElement("div");
                                var show_content = document.createElement("span");
                                var delete_day=document.createElement('span');
                                delete_day.setAttribute('class','delete_day');
                                
                                delete_day.innerHTML= '&times;';
                                show_day.setAttribute("class", "d-day")
                                show_content.setAttribute("class", "d-date")
                                var tmp = d_daylist[i]; //해당 나온 날짜와 내용을 tmp에 넣음
                                show_content.innerHTML = tmp.dday_content
                                //console.log(show_content.innerHTML);
                                // 디데이 계산하기
                                var date1 = new Date(tmp.start_date);
                                var date2 = new Date(tmp.final_date);
                                var gap = date2.getTime() - date1.getTime();
                                var ddayResult = Math.ceil(gap/(1000*60*60*24));

                                delete_day.setAttribute('value',tmp.dday_content);
                                const content=delete_day.getAttribute('value');
                                const index=i;
                                //console.log(content);
                                delete_day.addEventListener('click',function(){
                                    
                                    deleteDay(content,index);
                                })
                                show_day.innerHTML="D-"+ddayResult
                                //showrs_day.innerHTML = "D-" + --tmp.day;
                                show_day.append(delete_day);
                                show_day.append(show_content);
                                parentDiv.append(show_day);
                                show_day.style.fontWeight = "bold"
                                show_content.style.color = "black"
                                if (ddayResult < '4') {
                                    show_day.style.color = "red"
        
                                } else if (ddayResult < '8') {
                                    show_day.style.color = "blue"
                                } else {
                                    show_day.style.color = "black"
                                }
                            }
                            
                        </script>
                        </div>
                        <div class="d-day" id="d-day-plus"><span class="d-date" id="d-date-plus">+</span>디데이 추가하기</div>
                        <script>
                            var d_daylist = JSON.parse('<%- JSON.stringify(d_day) %>');
                            var invisible_plus=document.getElementById('d-day-plus');
                            if(d_daylist.length>=8){
                                //console.log('메인 페이지 로딩 - 숨기기')
                                invisible_plus.style.display='none';
                            }else{
                                //console.log('메인 페이지 로딩 - 보이기');
                                invisible_plus.style.display='inline-block';
                            }
                        </script>
                    </div>
                    
                    <div class="folder_">
                        
                        <div id="wrap_folder" class="wrap_folder">
                            <% for(var i=0;i<folder.length; i++) { %>
                                
                                <div class="folder">
                                    

                                <% if(folder[i].folder_fixed) {%>
                                    <img src=<%= folder[i].folder_color %> class='folder_img'/>
                                    <p class='main_folder_name' onclick="location.href='/folder/<%=folder[i]._id %>'"><%= folder[i].folder_name %></p>
                                    <img class="fixed_folder" src="/media/fixed_full.png" onclick="fixedFolderClicked('<%= i %>','<%= folder[i]._id%>', '<%= folder[i].folder_fixed%>')">
                                    <img src="/public/media/edit.png" id="revise_folder" class="revise_folder" onclick="reviseFolderClicked('<%= folder[i]._id %>','<%= i %>')">
                                        <img src="/public/media/delete.png" id="delete_folder" class="delete_folder" onclick="deleteFolderClicked('<%= folder[i]._id%>','<%= i %>');"> 
                                    <!-- <img class="three_button" src="/media/three_button.png"> -->
                                    <!-- <div class="modal_menu"><ul class="folder_menu">
                                        <li><div id="revise_folder" class="revise_folder" onclick="reviseFolderClicked('<%= folder[i]._id %>','<%= i %>')">수정</div></li>
                                        <li><div id="delete_folder" class="delete_folder" onclick="deleteFolderClicked('<%= folder[i]._id%>','<%= i %>');">삭제</div></li>    
                                    </ul>
                                    </div> -->
                                    <!-- <div class="folder_menu">
                                        <div src="/public/media/edit.png" id="revise_folder" class="revise_folder" onclick="reviseFolderClicked('<%= folder[i]._id %>','<%= i %>')"></div>
                                        <div src="/public/media/delete.png" id="delete_folder" class="delete_folder" onclick="deleteFolderClicked('<%= folder[i]._id%>','<%= i %>');"></div>   
                                    </div> -->
                                <!-- <div id="dropdown-folder" class="dropdown_folder">
                                    <button role="menuitem" class="dropdown_choice revise_folder" id="revise_folder" onclick="reviseFolderClicked('<%= i %>');"></button>
                                    <button role="menuitem" class="dropdown_choice delete_folder" id="delete_folder" onclick="reviseFolderClicked('<%= i %>');"></button></div> -->
                                    
                                <%} else{ %>
                                    <img src=<%= folder[i].folder_color %> class='folder_img'/>
                                    <p class='main_folder_name' onclick="location.href='/folder/<%=folder[i]._id %>'"><%= folder[i].folder_name %></p>
                                    <img class="fixed_folder" src="/media/fixed_empty.png" onclick="fixedFolderClicked('<%= i %>','<%= folder[i]._id%>', '<%= folder[i].folder_fixed%>')">
                                    <img src="/public/media/edit.png" id="revise_folder" class="revise_folder" onclick="reviseFolderClicked('<%= folder[i]._id %>','<%= i %>')">
                                        <img src="/public/media/delete.png" id="delete_folder" class="delete_folder" onclick="deleteFolderClicked('<%= folder[i]._id%>','<%= i %>');"> 
                                    <!-- <img class="three_button" src="/media/three_button.png"> -->
                                    <!-- <div class="modal_menu"><ul class="folder_menu">
                                        <li><div id="revise_folder" class="reivse_folder" onclick="reviseFolderClicked('<%= folder[i]._id %>','<%= i %>')">수정</div></li>
                                        <li><div id="delete_folder" class="delete_folder" onclick="deleteFolderClicked('<%= folder[i]._id %>','<%= i %>');">삭제</div></li>    
                                    </ul></div> -->
                                    
                                          
                                    
                                    <!-- dialog로 보여줄 지 고민해보기 -->
                                <!-- <div id="dropdown-folder" class="dropdown_folder">
                                    <button role="menuitem" class="dropdown_choice" id="revise_folder" onclick="reviseFolderClicked('<%= i %>');"></button>
                                    <button role="menuitem" class="dropdown_choice" id="delete_folder" onclick="deleteFolderClicked('<%= i %>');"></button></div> -->
                                    <% } %>
                                
                                </div>


                                <% } %>
                            </div>

                            <!-- folder 수정하기 -->
                            <div id="modal" class="modal modal_revise_folder">
                                <div class="modal-content-revise-folder">
                                    <span class="close_button close_revise_folder">&times;</span>
                                    <h1 class="title">폴더 수정하기</h1>
                                    <div id="revise_folder_id" folder_id="id자리"></div>
                                        <div>
                                            <input type="text" id="new-folder-name" name="new_folder_name" maxlength="7">
                                            <div class="folder_color_wrap" value="폴더의 색을 선택하세요.">
                                                <select id="new_folder_color" name="new_folder_color">
                                                
                                                <option value='/public/media/folder_orange.svg' style="background-color: #f29b34;">주황색</option>
                                                <option value='/public/media/folder_green.svg' style='background-color: #97ce68;'>연두색</option>
                                                <option value='/public/media/folder_yellow.svg' style='background-color: #fcd341;'>노란색</option>
                                                <option value='/public/media/folder_red.svg' style='background-color: #e36363;'>다홍색</option>
                                                <option value='/public/media/folder_mint.svg' style='background-color: #4dbdc2;'>하늘색</option>
                        
                                            
                                                </select>
                                            </div>
                                            <p>※새로고침을 하여 수정된 폴더 정보를 확인할 수 있습니다.</p>
                                        <div>
                                            <input type="button" class="modal-folder-revise" value="확인"></input>
                                        </div>
                                        </div>
                                </div>
                            </div>

                            <!-- folder 삭제하기 -->
                            <div id="modal" class="modal modal_delete_folder">
                                <div class="modal-content-delete-folder">
                                    <!-- <h1 class="title">폴더 삭제하기</h1> -->
                                    <div id="delete_folder_name" class="title"></div>
                                        <div id="delete_folder_index"></div>
                                        <div id='delete_folder_id'></div>
                                            
                                            
                                            <p>※폴더 내 포스트잇 정보도 삭제됩니다.
                                                그래도 삭제하시겠습니까?
                                            </p>
                                        <div class="buttons_wrap">
                                            
                                            <div data-dismiss="modal" class="btn cancelBtn cancel_delete_folder">취소</div>
                                            <div class="deleteBtn delete_delete_folder">확인</div>
                                        </div>
                                        
                                </div>
                            </div>

                            <!-- 동적 폴더 삭제하기 -->
            <div id="modal" class="modal modal_delete_new_folder">
                <div class="modal-content-delete-new-folder">
                    <!-- <h1 class="title">폴더 삭제하기</h1> -->
                    
                    <div id="delete_new_folder_name" class="title"></div>
                        <div id="delete_new_folder_id"></div>
                        <p>※폴더 내 포스트잇 정보도 삭제됩니다.
                            그래도 삭제하시겠습니까?
                        </p>
                        <div class="buttons_wrap">
                            
                            <div data-dismiss="modal" class="btn cancelBtn cancel_delete_new_folder">취소</div>
                            <div class="deleteBtn delete_new_folder">확인</div>
                        </div>
                        
                </div>
            </div>

                            <script type='text/javascript'>
                            var fixed_toggle=1;
                            function fixedFolderClicked(index, id, fixedBool){
                                var fixed_img=document.getElementsByClassName('fixed_folder')[index];

                                var currentFixed=fixedBool;
                                console.log("현재의 상태는 "+currentFixed);

                                if(currentFixed==true){
                                    fixed_toggle++;
                                }

                                if(fixed_toggle%2==1){
                                    currentFixed=true;
                                    fixed_img.src="/media/fixed_full.png"
                                    fixed_img.style.opacity=1;

                                    fetch('/folder_fixed',{
                                        method:'PATCH',
                                        headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({folder_id:id,folder_fixed:true})
                                    });
                                    console.log("true로 변신!");
                                }else{
                                    currentFixed=false;
                                    fixed_img.src="/media/fixed_empty.png"
                                    fixed_img.style.opacity=1;

                                    fetch('/folder_fixed',{
                                        method:'PATCH',
                                        headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({folder_id:id,folder_fixed:false})
                                    });
                                    console.log("false로 변신!");
                                }
                                fixed_toggle++;
                            }
                            
                            //var modal_menu=document.querySelector('.modal_menu');
                            //var trigger_menu=document.querySelector('.three_button');


                            var modal_revise_folder=document.querySelector('.modal_revise_folder');
                            
                            var close_revise_folder=document.querySelector('.close_revise_folder');
                            var store_revise_folder=document.querySelector('.modal-folder-revise');

                            var modal_delete_folder=document.querySelector('.modal_delete_folder');
                            var cancel_delete_folder=document.querySelector('.cancel_delete_folder');
                            var delete_delete_folder=document.querySelector('.delete_delete_folder');

                            var modal_delete_new_folder=document.querySelector('.modal_delete_new_folder');
                            var cancel_delete_new_folder=document.querySelector('.cancel_delete_new_folder');
                            var delete_new_folder=document.querySelector('.delete_new_folder');
                            
                        
                            function toggleReviseFolderModal(){
                                modal_revise_folder.classList.toggle("show_modal");
                            }
                            function toggleDeleteFolderModal(){
                                modal_delete_folder.classList.toggle('show_modal');
                            }
                            function toggleDeleteNewFolderModal(){
                                modal_delete_new_folder.classList.toggle('show_modal');
                            }
                            // function toggleShowMenuModal(){
                            //     modal_menu.classList.toggle('show_modal');
                            // }

                            function windowOnClick(event){
                                if(event.target===modal_revise_folder){
                                    toggleReviseFolderModal();
                                }else if(event.target===modal_delete_folder){
                                    toggleDeleteFolderModal();
                                }else if(event.target===modal_delete_new_folder){
                                    toggleDeleteNewFolderModal();
                                }
                                // else if(event.target===modal_menu){
                                //     toggleShowMenuModal();
                                // }
                            }
                            
                            
                            close_revise_folder.addEventListener('click',toggleReviseFolderModal);
                            store_revise_folder.addEventListener('click',toggleReviseFolderModal);

                            cancel_delete_folder.addEventListener('click',toggleDeleteFolderModal);
                            delete_delete_folder.addEventListener('click',toggleDeleteFolderModal);

                            cancel_delete_new_folder.addEventListener('click',toggleDeleteNewFolderModal);
                            delete_new_folder.addEventListener('click',toggleDeleteNewFolderModal);

                            //trigger_menu.addEventListener('click',toggleShowMenuModal);

                            function reviseFolderClicked(id, index){
                                var revise_folder=document.getElementsByClassName('folder')[index];
                                var revise_name=document.getElementsByClassName('main_folder_name')[index].innerHTML;
                                //$('input[name=new_folder_name]').attr('value',revise_name);
                                var revise_color=document.getElementsByClassName('folder_img')[index].getAttribute('src');
                                
                                
                                document.getElementById('new-folder-name').setAttribute('value',revise_name);
                                var hidden_id=document.getElementById('revise_folder_id');
                                hidden_id.setAttribute('folder_id',id);
                                
                                $('#new_folder_color').val(revise_color).prop('selected',true);
                                toggleReviseFolderModal();
                                
                            }

                        store_revise_folder.addEventListener('click',function(){
                                    
                                    var id=document.getElementById('revise_folder_id').getAttribute('folder_id');
                                    var revise_folder_name=$('#new-folder-name').val();

                                    var revise_folder_color=$('#new_folder_color:selected').val();
                                    
                                    if(revise_folder_name.trim()==''){
                                        alert("수정할 이름을 입력하세요");
                                    }else{
                                        fetch('/folder_revise',{
                                            method:'PATCH',
                                            headers:{
                                                'Accept':'application/json',
                                                'Content-Type':'application/json'
                                                },
                                            body:JSON.stringify({folder_id:id, revise_folder_name:revise_folder_name, revise_folder_color:revise_folder_color})
                                            })
                                            //.then((Response) => console.log(Response));                                   
                                        }
                            });
                            
                            function deleteFolderClicked(id,index){
                                
                                var delete_folder=document.getElementsByClassName('folder')[index];
                                var delete_folder_name=document.getElementsByClassName('main_folder_name')[index].innerHTML;
                                //console.log(delete_folder_name, index);
                                document.getElementById('delete_folder_name').innerHTML=delete_folder_name+" 삭제하기"
                                document.getElementById('delete_folder_name').setAttribute('value',delete_folder_name);
                                document.getElementById('delete_folder_index').setAttribute('value',index);
                                document.getElementById('delete_folder_id').setAttribute('value',id);
                                toggleDeleteFolderModal();

                        }

                        delete_delete_folder.addEventListener('click',function(){
                            var parent=document.getElementById('wrap_folder'); 
                            var delete_folder_name=document.getElementById('delete_folder_name').getAttribute('value');
                            var index=document.getElementById('delete_folder_index').getAttribute('value');
                            var delete_folder=document.getElementsByClassName('folder')[index];
                            var delete_folder_id=document.getElementById('delete_folder_id').getAttribute('value');

                            fetch('/folder',{
                                    method:'DELETE',
                                    headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({user_id:'<%= user.name %>', folder_id:delete_folder_id})
                                        //.then(res => res.json())   
                                    });
                                    parent.removeChild(delete_folder);
                        });
                        
                                
                            </script> 
                            

                        <div id="folder_plus">
                            <img src="media/plus_folder_gray.png"/><p>추가하기</p>
                        </div>

                </div>
            </div>
            </div>
            <div id="MAIN_RIGHT" class="column_right">
                <div class="aside">
                    <!-- 여기는 aisde(우측 로그인, 오늘할일) -->
                    <div class="aside_wrap">
                        <p>오늘 할 일</p>
                        
                        <div class="todaylist" id="todaylist">
                            
                            
                            <div class="todaylists" id='todaylists'>
                                <!-- todolist 뿌려주기 -->
                                
                            <% for(var i=0;i<todolist.length; i++) { %>
                            
                                <input type="hidden" value="<%=todolist[i].todo_content%>" class="todolist-id"/>
                                <% if(todolist[i].todo_finished) {%>
                                    <div class='wrap_label'><label class='label'><input type="checkbox" checked name='checkbox' onclick="onCheckedHandler('<%= todolist[i].todo_content %>',true)" class="checkbox">
                                        <p style='text-decoration: line-through;' class="p_p"><%= todolist[i].todo_content %></p></label><span class='delete_todo' onclick="onDeleteTodo('<%= todolist[i]._id %>','<%= i %>')">&times;</span></div>
                                <%} else{ %>
                                    <div class='wrap_label'><label class='label'><input type="checkbox" name='checkbox' onclick="onCheckedHandler('<%= todolist[i].todo_content %>',false)" class="checkbox">
                                        <p style='text-decoration: none;'class="p_p"><%= todolist[i].todo_content %></p></label><span class='delete_todo' onclick="onDeleteTodo('<%= todolist[i]._id %>','<%= i %>')">&times;</span></div>
                                    <% } %>
                                <% } %>
                                <!-- </form> -->
                                <!-- if문을 통해서 해당 todolist[i].todo_finished값이 true라면 checkbox에 checked로 띄워지게! -->
                            </div>
                            <input type="submit" class="btnplusTodo" value="+   할 일 추가하기"></input>
                        </div>
                        
                        <script>
                        
                            var checked_toggle=1;
                            //모달에서 추가하기를 눌렀을 때 값이 다시 업데이트가 되도록 mongodb에서 값 가져오기..
                            function onCheckedHandler(todo_content, boolValue){ //해당 _id값이 넘어온 것이니까 //mongodb에서 수정하기 위해서
                                var checkedIndex;
                                var checkedBox=document.getElementsByClassName('checkbox');
                                var hidden_input=document.getElementsByClassName('todolist-id');
                                for(var i=0;i<hidden_input.length;i++){
                                    if(hidden_input[i].value==todo_content){
                                        checkedIndex=i;
                                    }
                                }
                                var currentState=boolValue;
                                //console.log(currentState+'->'+!(currentState));
                                if(currentState==true){
                                    checked_toggle++;
                                }
                                var content=document.getElementsByClassName('p_p');
                                if(checked_toggle%2==1){ //unchecked -> checked
                                    content[checkedIndex].style.textDecoration='line-through';
                                    currentState=true;
                                    
                                    fetch('/',{
                                        method:'PATCH',
                                        headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({user_id:'<%= user.name %>',todo_content:content[checkedIndex].innerHTML, todo_finished:true})
                                        //.then(res => res.json( ))  
                                    });
                                    
                                }else{   //checked -> unchecked
                                    content[checkedIndex].style.textDecoration='none';
                                    content[checkedIndex].setAttribute('checked',false);
                                    
                                    currentState=false;
                                    fetch('/',{
                                        method:'PATCH',
                                        headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({user_id:'<%= user.name %>',todo_content:content[checkedIndex].innerHTML, todo_finished:false})
                                        //.then(res => res.json())  
                                    });

                                }      
                                    checked_toggle++;
                                                       }
                            
                            function onDeleteTodo(todo_id,delete_index){
                                var parent=document.getElementById('todaylists');
                                
                                var delete_div=document.getElementsByClassName('wrap_label')[delete_index];
                                var delete_p=document.getElementsByClassName('p_p')[index];
                                //console.log(delete_index);
                                //delete_div.innerHTML
                                //db에 삭제되도록 하기
                                fetch('/',{
                                        method:'DELETE',
                                        headers:{
                                            'Accept':'application/json',
                                            'Content-Type':'application/json'
                                        },
                                        body:JSON.stringify({user_id:'<%= user.name %>',todo_id:todo_id})
                                        //.then(res => res.json())   
                                    });
                                    parent.removeChild(delete_div);
                                    alert(delete_.innerHTML.innerHTML+'이(가) 오늘 할 일에서 삭제되었습니다.');
                            }
                        
                        </script>

                        
                        <!--+부분 이미지로 넣기-->
                        
                        <div class="caution">
                            오늘(11:59 PM)기준으로 완료된 할 일은<br>내일(12:00 AM)기준으로 제거되고,<br>완료되지 않은 할 일은 유지됩니다.
                        </div>
                </div>
            </div>

        <!-- todo-list 추가하기 모달 팝업 -->
    <div id="modal" class="modal modal_todo">
        <div class="modal-content-todo">
        <span class="close_button close_todo_button">&times;</span>
        <h1 class="title">오늘 할 일 추가히기</h1>
        
            <div>
                <input type="text" id="modal-todo" name="todo_content" maxlength="10" placeholder="할 일을 작성해보세요.">
                <input type="hidden">
            </div>
            <div>
                <input type="button" class="modal-todo-plus" value="확인"></input>
            </div>
        
        </div>
    </div>
        <!-- d-day 추가하기 모달 팝업 -->
    <div id="modal" class="modal modal_day">
        <div class="modal-content-day">
        <span class="close_button close_day_button">&times;</span>
        <h1 class="title">디데이 추가하기</h1>
        
            <div class="plus-part">
                <div><input type="date" id="modal-d-date" class="d-date" value="날짜"></input>
                
                <input type="text" id="modal-d-content" class="d-content" placeholder="내용 (최대 7자)"></div>          
                <div><input type="button" class="modal-d-plus" value="추가"></input></div>
            </div> 
        
        </div>
    </div>

<!-- folder 추가하기 -->
    <div id="modal" class="modal modal_folder">
        <div class="modal-content-folder">
            <span class="close_button close_folder_button">&times;</span>
            <h1 class="title">폴더 추가하기</h1>
                <div>
                    <input type="text" id="modal-folder-name" name="folder_name" maxlength="7" placeholder="폴더 이름을 입력하세요.">
                    <div class="folder_color_wrap" value="폴더의 색을 선택하세요.">
                        <select id="folder_color" name="folder_color">
                        
                        <option value='/public/media/folder_orange.svg' style="background-color: #f29b34;">주황색</option>
                        <option value='/public/media/folder_green.svg' style='background-color: #97ce68;'>연두색</option>
                        <option value='/public/media/folder_yellow.svg' style='background-color: #fcd341;'>노란색</option>
                        <option value='/public/media/folder_red.svg' style='background-color: #e36363;'>다홍색</option>
                        <option value='/public/media/folder_mint.svg' style='background-color: #4dbdc2;'>하늘색</option>

                    
                        </select>
                    </div>
                <div>
                    <input type="button" class="modal-folder-plus" value="확인"></input>
                </div>
                </div>
        </div>
    </div>



    <script type='text/javascript'>
    var modal_todo=document.querySelector(".modal_todo");
    var modal_day = document.querySelector(".modal_day"); // 팝업 될 레이어 class명
    var modal_folder=document.querySelector('.modal_folder')
    var trigger_todo=document.querySelector(".btnplusTodo"); //todo 추가하기 버튼
    var trigger_day = document.querySelector("#d-day-plus"); // 새로운 d-day 추가하기 버튼
    var trigger_folder=document.querySelector('#folder_plus');
    var closeTodoButton=document.querySelector('.close_todo_button');
    var closeDayButton = document.querySelector(".close_day_button");  // 우측 상단 닫기 버튼
    var closeFolderButton=document.querySelector('.close_folder_button');
    var storeTodoButton=document.querySelector('.modal-todo-plus');
    
    var storeFolderButton=document.querySelector('.modal-folder-plus');

    function toggleDayModal() {
        modal_day.classList.toggle("show_modal");
    }
    function toggleTodoModal(){
        modal_todo.classList.toggle("show_modal");
    }
    function toggleFolderModal(){
        modal_folder.classList.toggle('show_modal');
    }

    function windowOnClick(event) {
        if (event.target === modal_day) {
            toggleDayModal();
        }else if(event.target===modal_todo){
            toggleTodoModal();
        }
        else if(event.target===modal_folder){
            toggleFolderModal();
        }
    }
    trigger_day.addEventListener("click", toggleDayModal); // 디데이 추가하기 버튼
    trigger_todo.addEventListener("click",toggleTodoModal);
    trigger_folder.addEventListener('click',toggleFolderModal);
    closeDayButton.addEventListener("click", toggleDayModal);
    closeTodoButton.addEventListener('click',toggleTodoModal);
    closeFolderButton.addEventListener('click',toggleFolderModal);
    
    storeTodoButton.addEventListener('click',toggleTodoModal);
    storeFolderButton.addEventListener('click',toggleFolderModal);
    

    $('.modal-todo-plus').click(function(event){
        var new_content=$('#modal-todo').val();
        //var new_todo_id=todolist._id;
        if(new_content.trim()===''){ //내용을 입력하지 않은 경우
            alert("내용을 입력해주세요.");}
        else{
            var new_todolist;
            $.ajax({
                type:'POST',
                async:true,
                url:'/todo',
                data:{
                    todo_content:new_content,
                    todo_finished:false
                },
        
                success:function(data){
                    var new_todo = {
                        todo_content : new_content,
                        todo_finished : false
                    }
                    addNewTodo(new_todo, data);
                
                },error:function(err){
                    console.log('todo 저장 실패');
                }
            });

            // 디데이 개수 체크
            var parent_day=document.getElementById('wrap_day');
            var childCnt = parent_day.childElementCount;
            console.log('자식 개수:'+childCnt);
            //var invisible_plus=document.getElementById('d-day-plus');
            if (childCnt > 9 && ($('#d-day-plus').css('display') == 'inline-block')) { // <script>2개, d-day 8개 => 총 10개
                console.log('가리기1');
                $('#d-day-plus').css('display', 'none');
                //invisible_plus.style.display='none';
            } else if (childCnt == 9 && ($('#d-day-plus').css('display') == 'none')) {
                console.log('가리기2');
                $('#d-day-plus').css('display', 'none');
            } else {
                console.log('보이기');
                $('#d-day-plus').css('display', 'inline-block');
                //invisible_plus.style.display='inline-block';
            }
        }
    })
    
    function addNewTodo(todolist, data){
        //console.log(data);
        var content=todolist.todo_content;

        var parent_todolist=document.getElementById('todaylists');
        
        var new_div=document.createElement('div');
        new_div.setAttribute('class','wrap_label');
        var new_input=document.createElement('input');
        new_input.setAttribute('type','hidden');
        new_input.setAttribute('value',content);
        new_input.setAttribute('class','todolist-id')
        var new_label=document.createElement('label');
        new_label.setAttribute('class','label');
        var new_checkbox=document.createElement('input');
        new_checkbox.setAttribute('type','checkbox');
        new_checkbox.setAttribute('name','checkbox');
        new_checkbox.setAttribute('class','class');
        
        var new_p=document.createElement('p');
        new_p.setAttribute('class','p_p');
        new_p.innerHTML=content;
        var new_span=document.createElement('span');
        new_span.setAttribute('class','delete_todo');
        
        
        var new_ck_toggle=1;
        new_checkbox.addEventListener('click',function(){
            
            var check_content=todolist.todo_content;
            
            var check_value=todolist.todo_finished;
            
            if(check_value==true){
                new_ck_toggle++;
            }
            if(new_ck_toggle%2==1){
                new_p.style.textDecoration='line-through';
                check_value=true;

                fetch('/',{
                    method:'PATCH',
                    headers:{
                    'Accept':'application/json',
                    'Content-Type':'application/json'
                },
                body:JSON.stringify({user_id:'<%= user.name %>',todo_content:new_p.innerHTML, todo_finished:true})
                //.then(res => res.json( ))  
                });
            }else{
                new_p.style.textDecoration='none';
                check_value=false;
                fetch('/',{
                    method:'PATCH',
                    headers:{
                        'Accept':'application/json',
                        'Content-Type':'application/json'
                        },
                    body:JSON.stringify({user_id:'<%= user.name %>',todo_content:new_p.innerHTML, todo_finished:false})
                    //.then(res => res.json())  
                    });
            }
            new_ck_toggle++;
        });

        new_span.innerHTML='&times;'

        parent_todolist.append(new_div);
        new_div.append(new_label);
        new_label.append(new_checkbox);
        new_label.append(new_p);
        new_div.append(new_span);

        new_span.addEventListener('click',function(){
            
            fetch('/',{
                method:'DELETE',
                headers:{
                    'Accept':'application/json',
                    'Content-Type':'application/json'
                    },
                body:JSON.stringify({user_id:'<%= user.name %>',todo_id:data._id})
                //.then(res => res.json())   
                });
                alert(new_p.innerHTML+'이(가) 오늘 할 일에서 삭제되었습니다.');
                parent_todolist.removeChild(new_div);
        });
    }

    $('.modal-folder-plus').click(function(event){
        //추가되면 mongodb에 저장되도록
        var new_folder_name=$('#modal-folder-name').val();
        var new_folder_color=$('#folder_color option:selected').val(); //폴더 색 위치
        
        if(new_folder_name.trim()===''){
            alert('폴더 이름을 입력하세요');
        }else{
            $.ajax({
                type:'POST',
                async:true,
                url:'/folder_add',
                data:{
                    folder_name:new_folder_name,
                    folder_color:new_folder_color
                },
                success:function(data){
                    var new_folder={
                        folder_name: new_folder_name,
                        folder_fixed:false
                    }
                    
                    var new_folder_id=data.folder_id;
                    addNewFolder(new_folder,new_folder_id,new_folder_color);
                    

                    //동적 추가 시 피룡함
                },error:function(err){
                    console.log('folder 추가 실패');
                }
            })
        }
    });

    function addNewFolder(folder,folder_id,folder_color){
        
        var name=folder.folder_name;
        var color;
        var fixed=folder.folder_fixed;
        console.log("fixed의 값은 "+fixed);
        
        
        var wrap=document.createElement('div');
        wrap.setAttribute('class','folder');

        var parent_folder=document.getElementById('wrap_folder');


        var img_folder=document.createElement('img');
        img_folder.setAttribute('src',folder_color); 
        
        img_folder.setAttribute('class','folder_img');
        var p=document.createElement('p');
        p.setAttribute('class','main_folder_name');
        p.innerHTML=name;
        p.addEventListener('click',function(){
            location.href='/folder/'+folder_id;
        });

        var fixed_img=document.createElement('img');
        fixed_img.setAttribute('class','fixed_folder');
        fixed_img.setAttribute('src','/media/fixed_empty.png');
        
        new_fixed_toggle=1;
        fixed_img.addEventListener('click',function(){
            if(fixed==true){
                new_fixed_toggle++;
            }

            if(new_fixed_toggle%2==1){
                folder.fixed=true;
                fixed_img.setAttribute('value',true);
                fixed_img.setAttribute('src','/media/fixed_full.png');
                fixed_img.style.opacity=1;
                fetch('/folder_fixed',{
                    method:'PATCH',
                    headers:{
                        'Accept':'application/json',
                        'Content-Type':'application/json'
                    },
                    body:JSON.stringify({folder_id:folder_id,folder_fixed:true})
                        });
                
            }else{
                fixed=false;
                folder.fixed=false;
                fixed_img.setAttribute('src','/media/fixed_empty.png');
                fetch('/folder_fixed',{
                    method:'PATCH',
                    headers:{
                        'Accept':'application/json',
                        'Content-Type':'application/json'
                    },
                    body:JSON.stringify({folder_id:folder_id,folder_fixed:false})
                        });
                
            }
            new_fixed_toggle++;

            
        })
        // var img_button=document.createElement('img');
        // img_button.setAttribute('class','three_button');
        // img_button.setAttribute('src','/media/three_button.png');
        
        
        var img_re=document.createElement('img');
        img_re.setAttribute('class','revise_folder');
        img_re.setAttribute('id','revise_folder');
        img_re.setAttribute('src','/public/media/edit.png');
        img_re.addEventListener('click',function(){
            document.getElementById('new-folder-name').setAttribute('value',name);
            $('#new_folder_color').val(folder_color).prop('selected',true);
                toggleReviseFolderModal();
        })
        
        
        var img_del=document.createElement('img');
        img_del.setAttribute('class','delete_folder');
        img_del.setAttribute('id','delete_folder');
        img_del.setAttribute('src','/public/media/delete.png');
        
        
        

        wrap.append(img_folder);
        wrap.append(p);
        wrap.append(fixed_img);
        
        wrap.append(img_re);
        wrap.append(img_del);

            parent_folder.append(wrap);

            img_del.addEventListener('click',function(){
                document.getElementById('delete_new_folder_name').getAttribute('value',name);
                document.getElementById('delete_new_folder_name').innerHTML=name+" 삭제하기";
                toggleDeleteNewFolderModal();
                delete_new_folder.addEventListener('click',function(){
                    fetch('/folder',{
                method:'DELETE',
                headers:{
                    'Accept':'application/json',
                    'Content-Type':'application/json'
                    },
                body:JSON.stringify({user_id:'<%= user.name %>',folder_id:folder_id})
                //.then(res => res.json())   
                });
                parent_folder.removeChild(wrap);
                });
            
        }); 
    }

    // 디데이 동적으로 추가
    function newDeleteDay(content){
        var parent_day=document.getElementById('D-day');
        var delete_day=document.getElementsByClassName('d-day');

        //DB에서 삭제되도록
        fetch('/day',{
            method:'DELETE',
            headers:{
                'Accept':'application/json',
                'Content-Type':'application/json'
                    },
            body:JSON.stringify({user_id:'<%= user.name %>',dday_content:content})
            //.then(res => res.json())   
                    });
            parent_day.removeChild(delete_day);
            alert(content+'이(가) d-day에서 삭제되었습니다.');
    }

    $(document).ready(function () {

        $('.modal-d-plus').bind('click', function() {
            saveDday(this);
        });

        var saveDday = function(event) { // 디데이 저장하기 버튼
            $('.modal-d-plus').unbind('click');

            var date = $('#modal-d-date').val();
            var content = $('#modal-d-content').val();
            console.log('날짜: ',date);
            console.log('내용: ',content);
            
            // 오늘 날짜
            var today = new Date();
            var curyear = today.getFullYear();
            var curmon = today.getMonth()+1;
            if (curmon < 10) {
                curmon = '0'+curmon;
            }
            var curdate = today.getDate();
            var todayDate = curyear+'-'+curmon+'-'+curdate;
            console.log('오늘:', todayDate);

            if (date.trim() === '') {
                alert('디데이 마감 날짜를 선택해주세요.');
                $('.modal-d-plus').bind('click', function() { saveDday(this); });
            } else if (content.trim() === '') {
                alert('디데이 내용을 입력해주세요.');
                $('.modal-d-plus').bind('click', function() { saveDday(this); });
            } else if (new Date(date) < new Date(todayDate)) { // 오늘 날짜 이전이면 에러 처리
                alert('디데이 날짜는 금일('+todayDate+') 보다 이전일 수 없습니다.');
                $('.modal-d-plus').bind('click', function() { saveDday(this); });
            } else { // 저장하기
                $.ajax({
                    type:"POST",
                    async : true,
                    url:'/d-day',
                    data : {
                        date : date,
                        content : content,
                        today : todayDate,
                    },
                    success:function(data){ // POST요청 성공한 경우
                        
                        // 버튼 더이상 클릭되지 않게 하기
                        $('.modal-d-plus').bind('click', function() {
                            saveDday(this);
                        });
                        // 입력된 정보들 지우기
                        $('#modal-d-date').val('');
                        $('#modal-d-content').val('');


                        toggleDayModal(); // 모달 닫기

                        // 동적으로 추가
                        // in here d-day-plus
                        var show_day = document.createElement("div");
                        var show_content = document.createElement("span");
                        show_day.setAttribute("class", "d-day")
                        show_content.setAttribute("class", "d-date")
                        var tmp = d_daylist[i]; //해당 나온 날짜와 내용을 tmp에 넣음
                        show_content.innerHTML = content;

                        var delete_day=document.createElement('span');
                        delete_day.setAttribute('class','delete_day');
                                
                        delete_day.innerHTML= '&times;';
                        
                        // 디데이 계산하기
                        var date1 = new Date(today);
                        var date2 = new Date(date);
                        var gap = date2.getTime() - date1.getTime();
                        var ddayResult = Math.ceil(gap/(1000*60*60*24));

                        show_day.innerHTML="D-"+ddayResult

                        show_day.append(delete_day);
                        show_day.appendChild(show_content);
                        parentDiv.prepend(show_day);
                        delete_day.addEventListener('click',function(){
                            //DB에서 삭제되도록
                            fetch('/day',{
                                method:'DELETE',
                                headers:{
                                    'Accept':'application/json',
                                    'Content-Type':'application/json'
                                        },
                                body:JSON.stringify({user_id:'<%= user.name %>',dday_content:content})
                                //.then(res => res.json())   
                                        });
                            parentDiv.removeChild(show_day);
                            alert(content+'이(가) d-day에서 삭제되었습니다.');          
                        });

                        show_day.style.fontWeight = "bold"
                        show_content.style.color = "black"
                        if (ddayResult < '4') {
                            show_day.style.color = "red"

                        } else if (ddayResult < '8') {
                            show_day.style.color = "blue"
                        } else {
                            show_day.style.color = "black"
                        }

                        // 디데이 개수 체크
                        var parent_day=document.getElementById('wrap_day');
                        var childCnt = parent_day.childElementCount;
                        console.log('자식 개수2:'+childCnt);
                        //var invisible_plus=document.getElementById('d-day-plus');
                        if (childCnt > 9 && ($('#d-day-plus').css('display') == 'inline-block')) { // <script>2개, d-day 8개 => 총 10개
                            $('#d-day-plus').css('display', 'none');
                            //invisible_plus.style.display='none';
                        } else if (childCnt == 9 && ($('#d-day-plus').css('display') == 'none')) {
                            $('#d-day-plus').css('display', 'none');
                        } else {
                            $('#d-day-plus').css('display', 'inline-block');
                            //invisible_plus.style.display='inline-block';
                        }
                    },
                    error: function(err) { // POST 요청 실패시
                        console.log('디데이 추가 실패' + err);
                        alert('디데이 추가를 실패했습니다. 다시 시도해주세요.');
                        toggleDayModal(); 
                    }
                });
                
                
            }


        };

    });
    
    </script>
    </div>

    </div>
</body>

</html>